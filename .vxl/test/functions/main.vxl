var globalValue = "global";

function voidReturn() {
    syscall log("Void return called\n");
}

function valueReturn() {
    syscall log("Value return called\n");

    return 1 + 1;
}

function localValueReturn() {
    var localValue = "local";

    syscall log("Local value return called: ");
    syscall log(localValue);
    syscall log("\n");

    return localValue;
}

function globalValueReturn() {
    syscall log("Global value return called: ");
    syscall log(globalValue);
    syscall log("\n");

    return globalValue;
}

function globalValueMutate() {
    syscall log("Global value before: ");
    syscall log(globalValue);
    syscall log("\n");

    globalValue = "mutated";

    syscall log("Global value after: ");
    syscall log(globalValue);
    syscall log("\n");
}

function globalValueStoreLocalAndMutate() {
    var localValue = globalValue;

    syscall log("Local value before: ");
    syscall log(localValue);
    syscall log("\n");

    localValue = "mutated";

    syscall log("Local value before: ");
    syscall log(localValue);
    syscall log("\n");
}

function printArguments(a, b) {
    syscall log(a);
    syscall log("\n");

    syscall log(b);
    syscall log("\n");
}

function addArguments(a, b) {
    return a + b;
}

function setArgument(arg) {
    syscall log("Argument before: ");
    syscall log(arg);
    syscall log("\n");

    arg = "mutated";

    syscall log("Argument after: ");
    syscall log(arg);
    syscall log("\n");
}

function shadowedGlobalValue(globalValue) {
    syscall log("Value of shadowed global value: ");
    syscall log(globalValue);
    syscall log("\n");
}

function callOtherFunctions() {
    syscall log("Calling other functions:\n");

    voidReturn();

    return valueReturn();
}

function fibonacci(n) {
    if (n == 0 || n == 1) {
        return n;
    }

    return fibonacci(n - 1) + fibonacci(n - 2);
}

voidReturn();

var valueReturnResult = valueReturn();

syscall log(valueReturnResult);
syscall log("\n");

var localValueReturnResult = localValueReturn();

syscall log(localValueReturnResult);
syscall log("\n");

var globalValueReturnResult = globalValueReturn();

syscall log(globalValueReturnResult);
syscall log("\n");

globalValueMutate();

syscall log("Global value in global scope: ");
syscall log(globalValue);
syscall log("\n");

globalValueStoreLocalAndMutate();

syscall log("Global value in global scope: ");
syscall log(globalValue);
syscall log("\n");

printArguments("argument 1", "argument 2");

syscall log("Add arguments: ");
syscall log(addArguments(2, 3));
syscall log("\n");

var arg = "original";

setArgument(arg);

syscall log("Argument in global scope: ");
syscall log(arg);
syscall log("\n");

shadowedGlobalValue("shadowed");

var calledValueReturnResult = callOtherFunctions();

syscall log(calledValueReturnResult);
syscall log("\n");

var fibonacciResult = fibonacci(10);

syscall log(fibonacciResult);
syscall log("\n");

var namedFunction = function named() {
    syscall log("Named function called\n");
}

named();
namedFunction();

var anonymousFunction = function() {
    syscall log("Anonymous function called\n");
}

anonymousFunction();